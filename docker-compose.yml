version: '3.8'

services:
  dataenv:
    build:
      context: ./dataenv
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILDKIT=1
    container_name: dataenv
    volumes:
      - ./dataenv/app:/app
    depends_on:
      - db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 2048M

  jupyter:
    build:
      context: ./jupyter
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILDKIT=1
    container_name: jupyter
    volumes:
      - ./notebooks:/home/jovyan/work
    ports:
      - "8888:8888"
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 2048M

  db:
    image: postgres:latest
    container_name: postgresdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 2048M

  datadog:
    image: gcr.io/datadoghq/agent:7
    container_name: dd-agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1024M

volumes:
  postgres_data:
